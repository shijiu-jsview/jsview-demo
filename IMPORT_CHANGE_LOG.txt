2021.4.20
====================================
1. JS运行引擎升级，启动速度加快0.6s, 内存节省3~5M, Core.AAR包体积减少1M
版本号管理从原 XXX(例如736) 变更为 AAXXXX(例如810736), AA部分为引擎大版本

2. react_js目录结构调整，jsview-utils和例子内容提出到src同级目录jsview，
提出后，src目录中的仅留下为构建一个空项目的必要文件。
组件的升级简化为: 仅拷贝jsview目录，并执行其中的update.sh即可完成组件升级

2021.1.14
====================================
加入应用命名签名机制
影响文件(使用者更新时需要更新的文件)
react_js/src/index.js (更新方式: 文件覆盖)
react_js/package.json (更新方式: 文件覆盖 + 删掉node_modules，重新npm i)
react_js/src/appConfig/* (更新方式: 文件覆盖)
react_js/patch_package/react-scripts/scripts/build.js (更新方式:文件覆盖 + 执行react_js/patch_package/upate.sh)

2020.11.30
====================================
1. jsview-react对应的min.js(3个)从react_js/patch_package移动到了react_js/src/jsview-utils/jsview-react/bin/中。
   jsview-utils更新时，开发者把整个jsview-utils覆盖到自工程后，
   执行npm i /path/to/jsview-react/bin/jsview-react-package.tgz来更新node_module/jsview-react的内容

2020.7.06
====================================
1. 解决window.JsView.React.DesignMap中displayScale对清晰度的调整无效的问题	
关联文件:
	react_js/src/index.js
	react_js/src/main.js
	react_js/node_modules/jsview-react/dist/jsviewreact.min.js
	react_js/src/jsview-utils/jsview-react/index_hook.js
	
内容描述:
	屏幕尺寸和清晰度的调整从main.js的如下处理：
	window.JsView.React.DesignMap = {width:1280, displayScale:1.0}; // (可选配置)设置View坐标映射值，默认值也是1280, 1.0
	移动到了index.js中，loadJsViewProxy()函数调用的第二个参数中。
	并且width的属性名改为了更加易懂的screenWidth
	
	需要配合react_js/node_modules/jsview-react/dist/jsviewreact.min.js更新一起使用。
	否则会出现在盒子的JsView运行环境中，无法进入界面的问题。
	更新min.js文件的方法是进入react_js/patch_package/，执行update.sh
